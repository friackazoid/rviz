# Python package 'rviz' initialization.
#
# The actual implementations are defined in C++ and wrapped by
# shiboken or sip.  This wrapper finds which binding is available and
# presents it as package rviz.

import sys

# Can use the following setattr() call to force one binding or the other.
# setattr(sys, 'SELECT_QT_BINDING', 'pyside')



# Import the shared library generated by the shiboken binding-generator.
from . import rviz_shiboken as bindings

# Expose the contained rviz class as bindings
rviz_common = bindings.rviz_common
VisualizationFrame = bindings.rviz_common.VisualizerFramePy
Config = bindings.rviz_common.Config
YamlConfigReader = bindings.rviz_common.YamlConfigReader